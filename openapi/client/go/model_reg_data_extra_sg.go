/*
EasyAPI REST Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
Contact: easyapi@easydns.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RegDataExtraSG type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegDataExtraSG{}

// RegDataExtraSG struct for RegDataExtraSG
type RegDataExtraSG struct {
	// Business number
	RegistrationNumber *string `json:"registration_number,omitempty"`
}

// NewRegDataExtraSG instantiates a new RegDataExtraSG object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegDataExtraSG() *RegDataExtraSG {
	this := RegDataExtraSG{}
	return &this
}

// NewRegDataExtraSGWithDefaults instantiates a new RegDataExtraSG object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegDataExtraSGWithDefaults() *RegDataExtraSG {
	this := RegDataExtraSG{}
	return &this
}

// GetRegistrationNumber returns the RegistrationNumber field value if set, zero value otherwise.
func (o *RegDataExtraSG) GetRegistrationNumber() string {
	if o == nil || IsNil(o.RegistrationNumber) {
		var ret string
		return ret
	}
	return *o.RegistrationNumber
}

// GetRegistrationNumberOk returns a tuple with the RegistrationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegDataExtraSG) GetRegistrationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationNumber) {
		return nil, false
	}
	return o.RegistrationNumber, true
}

// HasRegistrationNumber returns a boolean if a field has been set.
func (o *RegDataExtraSG) HasRegistrationNumber() bool {
	if o != nil && !IsNil(o.RegistrationNumber) {
		return true
	}

	return false
}

// SetRegistrationNumber gets a reference to the given string and assigns it to the RegistrationNumber field.
func (o *RegDataExtraSG) SetRegistrationNumber(v string) {
	o.RegistrationNumber = &v
}

func (o RegDataExtraSG) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegDataExtraSG) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RegistrationNumber) {
		toSerialize["registration_number"] = o.RegistrationNumber
	}
	return toSerialize, nil
}

type NullableRegDataExtraSG struct {
	value *RegDataExtraSG
	isSet bool
}

func (v NullableRegDataExtraSG) Get() *RegDataExtraSG {
	return v.value
}

func (v *NullableRegDataExtraSG) Set(val *RegDataExtraSG) {
	v.value = val
	v.isSet = true
}

func (v NullableRegDataExtraSG) IsSet() bool {
	return v.isSet
}

func (v *NullableRegDataExtraSG) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegDataExtraSG(val *RegDataExtraSG) *NullableRegDataExtraSG {
	return &NullableRegDataExtraSG{value: val, isSet: true}
}

func (v NullableRegDataExtraSG) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegDataExtraSG) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


