/*
EasyAPI REST Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
Contact: easyapi@easydns.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResultModelMailmapListItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResultModelMailmapListItem{}

// ResultModelMailmapListItem struct for ResultModelMailmapListItem
type ResultModelMailmapListItem struct {
	// Status flag indicating if a mailmap is currently active
	Active int32 `json:"active"`
	// The alias (or email address) of the mailmap
	Alias string `json:"alias"`
	// A list of email addresses the mailmap forwards to
	Destination string `json:"destination"`
	// The domain the mailmap belongs to
	Domain string `json:"domain"`
	// The hostname of the mailmap relative to the domain name
	Host string `json:"host"`
	// The date the mailmap was last modified
	LastModified string `json:"last_modified"`
	// The unique ID that identifies this mailmap
	MailmapId int32 `json:"mailmap_id"`
}

type _ResultModelMailmapListItem ResultModelMailmapListItem

// NewResultModelMailmapListItem instantiates a new ResultModelMailmapListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResultModelMailmapListItem(active int32, alias string, destination string, domain string, host string, lastModified string, mailmapId int32) *ResultModelMailmapListItem {
	this := ResultModelMailmapListItem{}
	this.Active = active
	this.Alias = alias
	this.Destination = destination
	this.Domain = domain
	this.Host = host
	this.LastModified = lastModified
	this.MailmapId = mailmapId
	return &this
}

// NewResultModelMailmapListItemWithDefaults instantiates a new ResultModelMailmapListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultModelMailmapListItemWithDefaults() *ResultModelMailmapListItem {
	this := ResultModelMailmapListItem{}
	return &this
}

// GetActive returns the Active field value
func (o *ResultModelMailmapListItem) GetActive() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *ResultModelMailmapListItem) GetActiveOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *ResultModelMailmapListItem) SetActive(v int32) {
	o.Active = v
}

// GetAlias returns the Alias field value
func (o *ResultModelMailmapListItem) GetAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Alias
}

// GetAliasOk returns a tuple with the Alias field value
// and a boolean to check if the value has been set.
func (o *ResultModelMailmapListItem) GetAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alias, true
}

// SetAlias sets field value
func (o *ResultModelMailmapListItem) SetAlias(v string) {
	o.Alias = v
}

// GetDestination returns the Destination field value
func (o *ResultModelMailmapListItem) GetDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *ResultModelMailmapListItem) GetDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *ResultModelMailmapListItem) SetDestination(v string) {
	o.Destination = v
}

// GetDomain returns the Domain field value
func (o *ResultModelMailmapListItem) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *ResultModelMailmapListItem) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *ResultModelMailmapListItem) SetDomain(v string) {
	o.Domain = v
}

// GetHost returns the Host field value
func (o *ResultModelMailmapListItem) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *ResultModelMailmapListItem) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *ResultModelMailmapListItem) SetHost(v string) {
	o.Host = v
}

// GetLastModified returns the LastModified field value
func (o *ResultModelMailmapListItem) GetLastModified() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value
// and a boolean to check if the value has been set.
func (o *ResultModelMailmapListItem) GetLastModifiedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModified, true
}

// SetLastModified sets field value
func (o *ResultModelMailmapListItem) SetLastModified(v string) {
	o.LastModified = v
}

// GetMailmapId returns the MailmapId field value
func (o *ResultModelMailmapListItem) GetMailmapId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MailmapId
}

// GetMailmapIdOk returns a tuple with the MailmapId field value
// and a boolean to check if the value has been set.
func (o *ResultModelMailmapListItem) GetMailmapIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MailmapId, true
}

// SetMailmapId sets field value
func (o *ResultModelMailmapListItem) SetMailmapId(v int32) {
	o.MailmapId = v
}

func (o ResultModelMailmapListItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResultModelMailmapListItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active"] = o.Active
	toSerialize["alias"] = o.Alias
	toSerialize["destination"] = o.Destination
	toSerialize["domain"] = o.Domain
	toSerialize["host"] = o.Host
	toSerialize["last_modified"] = o.LastModified
	toSerialize["mailmap_id"] = o.MailmapId
	return toSerialize, nil
}

func (o *ResultModelMailmapListItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"active",
		"alias",
		"destination",
		"domain",
		"host",
		"last_modified",
		"mailmap_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResultModelMailmapListItem := _ResultModelMailmapListItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResultModelMailmapListItem)

	if err != nil {
		return err
	}

	*o = ResultModelMailmapListItem(varResultModelMailmapListItem)

	return err
}

type NullableResultModelMailmapListItem struct {
	value *ResultModelMailmapListItem
	isSet bool
}

func (v NullableResultModelMailmapListItem) Get() *ResultModelMailmapListItem {
	return v.value
}

func (v *NullableResultModelMailmapListItem) Set(val *ResultModelMailmapListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableResultModelMailmapListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableResultModelMailmapListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResultModelMailmapListItem(val *ResultModelMailmapListItem) *NullableResultModelMailmapListItem {
	return &NullableResultModelMailmapListItem{value: val, isSet: true}
}

func (v NullableResultModelMailmapListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResultModelMailmapListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


