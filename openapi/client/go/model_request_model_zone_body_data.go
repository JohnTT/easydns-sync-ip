/*
EasyAPI REST Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
Contact: easyapi@easydns.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RequestModelZoneBodyData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestModelZoneBodyData{}

// RequestModelZoneBodyData struct for RequestModelZoneBodyData
type RequestModelZoneBodyData struct {
	// The domain (FQDN) the zone record belongs to
	Domain string `json:"domain"`
	// The hostname (minus the domain) the zone record is for
	Host string `json:"host"`
	// The TTL (time-to-live) value for the zone record
	Ttl *int32 `json:"ttl,omitempty"`
	// The priority of the zone record (Only applicable to record types that require it such as MX records)
	Prio *int32 `json:"prio,omitempty"`
	// The record type (A, AAAA, CNAME, etc) to use for this zone record
	Type string `json:"type"`
	// The rdata value to use for the zone record
	Rdata string `json:"rdata"`
	// The ID of the geozone based on georegion that this record should apply to
	GeozoneId *int32 `json:"geozone_id,omitempty"`
}

type _RequestModelZoneBodyData RequestModelZoneBodyData

// NewRequestModelZoneBodyData instantiates a new RequestModelZoneBodyData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestModelZoneBodyData(domain string, host string, type_ string, rdata string) *RequestModelZoneBodyData {
	this := RequestModelZoneBodyData{}
	this.Domain = domain
	this.Host = host
	var ttl int32 = 600
	this.Ttl = &ttl
	var prio int32 = 0
	this.Prio = &prio
	this.Type = type_
	this.Rdata = rdata
	var geozoneId int32 = 0
	this.GeozoneId = &geozoneId
	return &this
}

// NewRequestModelZoneBodyDataWithDefaults instantiates a new RequestModelZoneBodyData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestModelZoneBodyDataWithDefaults() *RequestModelZoneBodyData {
	this := RequestModelZoneBodyData{}
	var ttl int32 = 600
	this.Ttl = &ttl
	var prio int32 = 0
	this.Prio = &prio
	var geozoneId int32 = 0
	this.GeozoneId = &geozoneId
	return &this
}

// GetDomain returns the Domain field value
func (o *RequestModelZoneBodyData) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *RequestModelZoneBodyData) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *RequestModelZoneBodyData) SetDomain(v string) {
	o.Domain = v
}

// GetHost returns the Host field value
func (o *RequestModelZoneBodyData) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *RequestModelZoneBodyData) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *RequestModelZoneBodyData) SetHost(v string) {
	o.Host = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *RequestModelZoneBodyData) GetTtl() int32 {
	if o == nil || IsNil(o.Ttl) {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestModelZoneBodyData) GetTtlOk() (*int32, bool) {
	if o == nil || IsNil(o.Ttl) {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *RequestModelZoneBodyData) HasTtl() bool {
	if o != nil && !IsNil(o.Ttl) {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *RequestModelZoneBodyData) SetTtl(v int32) {
	o.Ttl = &v
}

// GetPrio returns the Prio field value if set, zero value otherwise.
func (o *RequestModelZoneBodyData) GetPrio() int32 {
	if o == nil || IsNil(o.Prio) {
		var ret int32
		return ret
	}
	return *o.Prio
}

// GetPrioOk returns a tuple with the Prio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestModelZoneBodyData) GetPrioOk() (*int32, bool) {
	if o == nil || IsNil(o.Prio) {
		return nil, false
	}
	return o.Prio, true
}

// HasPrio returns a boolean if a field has been set.
func (o *RequestModelZoneBodyData) HasPrio() bool {
	if o != nil && !IsNil(o.Prio) {
		return true
	}

	return false
}

// SetPrio gets a reference to the given int32 and assigns it to the Prio field.
func (o *RequestModelZoneBodyData) SetPrio(v int32) {
	o.Prio = &v
}

// GetType returns the Type field value
func (o *RequestModelZoneBodyData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RequestModelZoneBodyData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RequestModelZoneBodyData) SetType(v string) {
	o.Type = v
}

// GetRdata returns the Rdata field value
func (o *RequestModelZoneBodyData) GetRdata() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rdata
}

// GetRdataOk returns a tuple with the Rdata field value
// and a boolean to check if the value has been set.
func (o *RequestModelZoneBodyData) GetRdataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rdata, true
}

// SetRdata sets field value
func (o *RequestModelZoneBodyData) SetRdata(v string) {
	o.Rdata = v
}

// GetGeozoneId returns the GeozoneId field value if set, zero value otherwise.
func (o *RequestModelZoneBodyData) GetGeozoneId() int32 {
	if o == nil || IsNil(o.GeozoneId) {
		var ret int32
		return ret
	}
	return *o.GeozoneId
}

// GetGeozoneIdOk returns a tuple with the GeozoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestModelZoneBodyData) GetGeozoneIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GeozoneId) {
		return nil, false
	}
	return o.GeozoneId, true
}

// HasGeozoneId returns a boolean if a field has been set.
func (o *RequestModelZoneBodyData) HasGeozoneId() bool {
	if o != nil && !IsNil(o.GeozoneId) {
		return true
	}

	return false
}

// SetGeozoneId gets a reference to the given int32 and assigns it to the GeozoneId field.
func (o *RequestModelZoneBodyData) SetGeozoneId(v int32) {
	o.GeozoneId = &v
}

func (o RequestModelZoneBodyData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestModelZoneBodyData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domain"] = o.Domain
	toSerialize["host"] = o.Host
	if !IsNil(o.Ttl) {
		toSerialize["ttl"] = o.Ttl
	}
	if !IsNil(o.Prio) {
		toSerialize["prio"] = o.Prio
	}
	toSerialize["type"] = o.Type
	toSerialize["rdata"] = o.Rdata
	if !IsNil(o.GeozoneId) {
		toSerialize["geozone_id"] = o.GeozoneId
	}
	return toSerialize, nil
}

func (o *RequestModelZoneBodyData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"domain",
		"host",
		"type",
		"rdata",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequestModelZoneBodyData := _RequestModelZoneBodyData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRequestModelZoneBodyData)

	if err != nil {
		return err
	}

	*o = RequestModelZoneBodyData(varRequestModelZoneBodyData)

	return err
}

type NullableRequestModelZoneBodyData struct {
	value *RequestModelZoneBodyData
	isSet bool
}

func (v NullableRequestModelZoneBodyData) Get() *RequestModelZoneBodyData {
	return v.value
}

func (v *NullableRequestModelZoneBodyData) Set(val *RequestModelZoneBodyData) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestModelZoneBodyData) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestModelZoneBodyData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestModelZoneBodyData(val *RequestModelZoneBodyData) *NullableRequestModelZoneBodyData {
	return &NullableRequestModelZoneBodyData{value: val, isSet: true}
}

func (v NullableRequestModelZoneBodyData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestModelZoneBodyData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


