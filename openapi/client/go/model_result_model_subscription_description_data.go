/*
EasyAPI REST Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
Contact: easyapi@easydns.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResultModelSubscriptionDescriptionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResultModelSubscriptionDescriptionData{}

// ResultModelSubscriptionDescriptionData Response data related to request
type ResultModelSubscriptionDescriptionData struct {
	// The ID of the subscription block included in the request
	SubscriptionId int32 `json:"subscription_id"`
	// The name of the service
	Name string `json:"name"`
	// The ID of the service provided by the requested subscription block
	ServiceId int32 `json:"service_id"`
	// The term the subscription block is active before requiring renewal. Almost always presented in months
	Period int32 `json:"period"`
	// Is the service an enterprise level service
	Enterprise int32 `json:"enterprise"`
	// A description of the service offering
	Description string `json:"description"`
	// The number of domains the subscription block supports
	Size int32 `json:"size"`
}

type _ResultModelSubscriptionDescriptionData ResultModelSubscriptionDescriptionData

// NewResultModelSubscriptionDescriptionData instantiates a new ResultModelSubscriptionDescriptionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResultModelSubscriptionDescriptionData(subscriptionId int32, name string, serviceId int32, period int32, enterprise int32, description string, size int32) *ResultModelSubscriptionDescriptionData {
	this := ResultModelSubscriptionDescriptionData{}
	this.SubscriptionId = subscriptionId
	this.Name = name
	this.ServiceId = serviceId
	this.Period = period
	this.Enterprise = enterprise
	this.Description = description
	this.Size = size
	return &this
}

// NewResultModelSubscriptionDescriptionDataWithDefaults instantiates a new ResultModelSubscriptionDescriptionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultModelSubscriptionDescriptionDataWithDefaults() *ResultModelSubscriptionDescriptionData {
	this := ResultModelSubscriptionDescriptionData{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *ResultModelSubscriptionDescriptionData) GetSubscriptionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *ResultModelSubscriptionDescriptionData) GetSubscriptionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *ResultModelSubscriptionDescriptionData) SetSubscriptionId(v int32) {
	o.SubscriptionId = v
}

// GetName returns the Name field value
func (o *ResultModelSubscriptionDescriptionData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResultModelSubscriptionDescriptionData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResultModelSubscriptionDescriptionData) SetName(v string) {
	o.Name = v
}

// GetServiceId returns the ServiceId field value
func (o *ResultModelSubscriptionDescriptionData) GetServiceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ResultModelSubscriptionDescriptionData) GetServiceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ResultModelSubscriptionDescriptionData) SetServiceId(v int32) {
	o.ServiceId = v
}

// GetPeriod returns the Period field value
func (o *ResultModelSubscriptionDescriptionData) GetPeriod() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *ResultModelSubscriptionDescriptionData) GetPeriodOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *ResultModelSubscriptionDescriptionData) SetPeriod(v int32) {
	o.Period = v
}

// GetEnterprise returns the Enterprise field value
func (o *ResultModelSubscriptionDescriptionData) GetEnterprise() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Enterprise
}

// GetEnterpriseOk returns a tuple with the Enterprise field value
// and a boolean to check if the value has been set.
func (o *ResultModelSubscriptionDescriptionData) GetEnterpriseOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enterprise, true
}

// SetEnterprise sets field value
func (o *ResultModelSubscriptionDescriptionData) SetEnterprise(v int32) {
	o.Enterprise = v
}

// GetDescription returns the Description field value
func (o *ResultModelSubscriptionDescriptionData) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ResultModelSubscriptionDescriptionData) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ResultModelSubscriptionDescriptionData) SetDescription(v string) {
	o.Description = v
}

// GetSize returns the Size field value
func (o *ResultModelSubscriptionDescriptionData) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ResultModelSubscriptionDescriptionData) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *ResultModelSubscriptionDescriptionData) SetSize(v int32) {
	o.Size = v
}

func (o ResultModelSubscriptionDescriptionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResultModelSubscriptionDescriptionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscription_id"] = o.SubscriptionId
	toSerialize["name"] = o.Name
	toSerialize["service_id"] = o.ServiceId
	toSerialize["period"] = o.Period
	toSerialize["enterprise"] = o.Enterprise
	toSerialize["description"] = o.Description
	toSerialize["size"] = o.Size
	return toSerialize, nil
}

func (o *ResultModelSubscriptionDescriptionData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subscription_id",
		"name",
		"service_id",
		"period",
		"enterprise",
		"description",
		"size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResultModelSubscriptionDescriptionData := _ResultModelSubscriptionDescriptionData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResultModelSubscriptionDescriptionData)

	if err != nil {
		return err
	}

	*o = ResultModelSubscriptionDescriptionData(varResultModelSubscriptionDescriptionData)

	return err
}

type NullableResultModelSubscriptionDescriptionData struct {
	value *ResultModelSubscriptionDescriptionData
	isSet bool
}

func (v NullableResultModelSubscriptionDescriptionData) Get() *ResultModelSubscriptionDescriptionData {
	return v.value
}

func (v *NullableResultModelSubscriptionDescriptionData) Set(val *ResultModelSubscriptionDescriptionData) {
	v.value = val
	v.isSet = true
}

func (v NullableResultModelSubscriptionDescriptionData) IsSet() bool {
	return v.isSet
}

func (v *NullableResultModelSubscriptionDescriptionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResultModelSubscriptionDescriptionData(val *ResultModelSubscriptionDescriptionData) *NullableResultModelSubscriptionDescriptionData {
	return &NullableResultModelSubscriptionDescriptionData{value: val, isSet: true}
}

func (v NullableResultModelSubscriptionDescriptionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResultModelSubscriptionDescriptionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


