/*
EasyAPI REST Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
Contact: easyapi@easydns.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResultModelZoneList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResultModelZoneList{}

// ResultModelZoneList struct for ResultModelZoneList
type ResultModelZoneList struct {
	Msg string `json:"msg"`
	Status int32 `json:"status"`
	Tm int32 `json:"tm"`
	Data ResultModelZoneRecord `json:"data"`
	Count *int32 `json:"count,omitempty"`
	Total *int32 `json:"total,omitempty"`
	Start *int32 `json:"start,omitempty"`
	Max *int32 `json:"max,omitempty"`
}

type _ResultModelZoneList ResultModelZoneList

// NewResultModelZoneList instantiates a new ResultModelZoneList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResultModelZoneList(msg string, status int32, tm int32, data ResultModelZoneRecord) *ResultModelZoneList {
	this := ResultModelZoneList{}
	this.Msg = msg
	this.Status = status
	this.Tm = tm
	this.Data = data
	return &this
}

// NewResultModelZoneListWithDefaults instantiates a new ResultModelZoneList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultModelZoneListWithDefaults() *ResultModelZoneList {
	this := ResultModelZoneList{}
	return &this
}

// GetMsg returns the Msg field value
func (o *ResultModelZoneList) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *ResultModelZoneList) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *ResultModelZoneList) SetMsg(v string) {
	o.Msg = v
}

// GetStatus returns the Status field value
func (o *ResultModelZoneList) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ResultModelZoneList) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ResultModelZoneList) SetStatus(v int32) {
	o.Status = v
}

// GetTm returns the Tm field value
func (o *ResultModelZoneList) GetTm() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Tm
}

// GetTmOk returns a tuple with the Tm field value
// and a boolean to check if the value has been set.
func (o *ResultModelZoneList) GetTmOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tm, true
}

// SetTm sets field value
func (o *ResultModelZoneList) SetTm(v int32) {
	o.Tm = v
}

// GetData returns the Data field value
func (o *ResultModelZoneList) GetData() ResultModelZoneRecord {
	if o == nil {
		var ret ResultModelZoneRecord
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ResultModelZoneList) GetDataOk() (*ResultModelZoneRecord, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ResultModelZoneList) SetData(v ResultModelZoneRecord) {
	o.Data = v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ResultModelZoneList) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultModelZoneList) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ResultModelZoneList) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ResultModelZoneList) SetCount(v int32) {
	o.Count = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ResultModelZoneList) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultModelZoneList) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ResultModelZoneList) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *ResultModelZoneList) SetTotal(v int32) {
	o.Total = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *ResultModelZoneList) GetStart() int32 {
	if o == nil || IsNil(o.Start) {
		var ret int32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultModelZoneList) GetStartOk() (*int32, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *ResultModelZoneList) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int32 and assigns it to the Start field.
func (o *ResultModelZoneList) SetStart(v int32) {
	o.Start = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *ResultModelZoneList) GetMax() int32 {
	if o == nil || IsNil(o.Max) {
		var ret int32
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultModelZoneList) GetMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *ResultModelZoneList) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given int32 and assigns it to the Max field.
func (o *ResultModelZoneList) SetMax(v int32) {
	o.Max = &v
}

func (o ResultModelZoneList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResultModelZoneList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["msg"] = o.Msg
	toSerialize["status"] = o.Status
	toSerialize["tm"] = o.Tm
	toSerialize["data"] = o.Data
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	return toSerialize, nil
}

func (o *ResultModelZoneList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"msg",
		"status",
		"tm",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResultModelZoneList := _ResultModelZoneList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResultModelZoneList)

	if err != nil {
		return err
	}

	*o = ResultModelZoneList(varResultModelZoneList)

	return err
}

type NullableResultModelZoneList struct {
	value *ResultModelZoneList
	isSet bool
}

func (v NullableResultModelZoneList) Get() *ResultModelZoneList {
	return v.value
}

func (v *NullableResultModelZoneList) Set(val *ResultModelZoneList) {
	v.value = val
	v.isSet = true
}

func (v NullableResultModelZoneList) IsSet() bool {
	return v.isSet
}

func (v *NullableResultModelZoneList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResultModelZoneList(val *ResultModelZoneList) *NullableResultModelZoneList {
	return &NullableResultModelZoneList{value: val, isSet: true}
}

func (v NullableResultModelZoneList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResultModelZoneList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


