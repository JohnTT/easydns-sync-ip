/*
EasyAPI REST Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
Contact: easyapi@easydns.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResultModelServiceDescriptionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResultModelServiceDescriptionData{}

// ResultModelServiceDescriptionData Response data related to request
type ResultModelServiceDescriptionData struct {
	// The ID of the service included in the request
	ServiceId int32 `json:"service_id"`
	// The name of the service
	Name string `json:"name"`
	// The term the service is active before requiring renewal. Almost always presented in months
	Period int32 `json:"period"`
	// Is the service an enterprise level service
	Enterprise int32 `json:"enterprise"`
	// A description of the service offering
	Description string `json:"description"`
}

type _ResultModelServiceDescriptionData ResultModelServiceDescriptionData

// NewResultModelServiceDescriptionData instantiates a new ResultModelServiceDescriptionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResultModelServiceDescriptionData(serviceId int32, name string, period int32, enterprise int32, description string) *ResultModelServiceDescriptionData {
	this := ResultModelServiceDescriptionData{}
	this.ServiceId = serviceId
	this.Name = name
	this.Period = period
	this.Enterprise = enterprise
	this.Description = description
	return &this
}

// NewResultModelServiceDescriptionDataWithDefaults instantiates a new ResultModelServiceDescriptionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultModelServiceDescriptionDataWithDefaults() *ResultModelServiceDescriptionData {
	this := ResultModelServiceDescriptionData{}
	return &this
}

// GetServiceId returns the ServiceId field value
func (o *ResultModelServiceDescriptionData) GetServiceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ResultModelServiceDescriptionData) GetServiceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ResultModelServiceDescriptionData) SetServiceId(v int32) {
	o.ServiceId = v
}

// GetName returns the Name field value
func (o *ResultModelServiceDescriptionData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResultModelServiceDescriptionData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResultModelServiceDescriptionData) SetName(v string) {
	o.Name = v
}

// GetPeriod returns the Period field value
func (o *ResultModelServiceDescriptionData) GetPeriod() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *ResultModelServiceDescriptionData) GetPeriodOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *ResultModelServiceDescriptionData) SetPeriod(v int32) {
	o.Period = v
}

// GetEnterprise returns the Enterprise field value
func (o *ResultModelServiceDescriptionData) GetEnterprise() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Enterprise
}

// GetEnterpriseOk returns a tuple with the Enterprise field value
// and a boolean to check if the value has been set.
func (o *ResultModelServiceDescriptionData) GetEnterpriseOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enterprise, true
}

// SetEnterprise sets field value
func (o *ResultModelServiceDescriptionData) SetEnterprise(v int32) {
	o.Enterprise = v
}

// GetDescription returns the Description field value
func (o *ResultModelServiceDescriptionData) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ResultModelServiceDescriptionData) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ResultModelServiceDescriptionData) SetDescription(v string) {
	o.Description = v
}

func (o ResultModelServiceDescriptionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResultModelServiceDescriptionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["service_id"] = o.ServiceId
	toSerialize["name"] = o.Name
	toSerialize["period"] = o.Period
	toSerialize["enterprise"] = o.Enterprise
	toSerialize["description"] = o.Description
	return toSerialize, nil
}

func (o *ResultModelServiceDescriptionData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"service_id",
		"name",
		"period",
		"enterprise",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResultModelServiceDescriptionData := _ResultModelServiceDescriptionData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResultModelServiceDescriptionData)

	if err != nil {
		return err
	}

	*o = ResultModelServiceDescriptionData(varResultModelServiceDescriptionData)

	return err
}

type NullableResultModelServiceDescriptionData struct {
	value *ResultModelServiceDescriptionData
	isSet bool
}

func (v NullableResultModelServiceDescriptionData) Get() *ResultModelServiceDescriptionData {
	return v.value
}

func (v *NullableResultModelServiceDescriptionData) Set(val *ResultModelServiceDescriptionData) {
	v.value = val
	v.isSet = true
}

func (v NullableResultModelServiceDescriptionData) IsSet() bool {
	return v.isSet
}

func (v *NullableResultModelServiceDescriptionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResultModelServiceDescriptionData(val *ResultModelServiceDescriptionData) *NullableResultModelServiceDescriptionData {
	return &NullableResultModelServiceDescriptionData{value: val, isSet: true}
}

func (v NullableResultModelServiceDescriptionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResultModelServiceDescriptionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


