/*
EasyAPI REST Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
Contact: easyapi@easydns.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResultModelZoneSOA type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResultModelZoneSOA{}

// ResultModelZoneSOA struct for ResultModelZoneSOA
type ResultModelZoneSOA struct {
	Domain string `json:"domain"`
	Soa int32 `json:"soa"`
}

type _ResultModelZoneSOA ResultModelZoneSOA

// NewResultModelZoneSOA instantiates a new ResultModelZoneSOA object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResultModelZoneSOA(domain string, soa int32) *ResultModelZoneSOA {
	this := ResultModelZoneSOA{}
	this.Domain = domain
	this.Soa = soa
	return &this
}

// NewResultModelZoneSOAWithDefaults instantiates a new ResultModelZoneSOA object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultModelZoneSOAWithDefaults() *ResultModelZoneSOA {
	this := ResultModelZoneSOA{}
	return &this
}

// GetDomain returns the Domain field value
func (o *ResultModelZoneSOA) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *ResultModelZoneSOA) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *ResultModelZoneSOA) SetDomain(v string) {
	o.Domain = v
}

// GetSoa returns the Soa field value
func (o *ResultModelZoneSOA) GetSoa() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Soa
}

// GetSoaOk returns a tuple with the Soa field value
// and a boolean to check if the value has been set.
func (o *ResultModelZoneSOA) GetSoaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Soa, true
}

// SetSoa sets field value
func (o *ResultModelZoneSOA) SetSoa(v int32) {
	o.Soa = v
}

func (o ResultModelZoneSOA) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResultModelZoneSOA) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domain"] = o.Domain
	toSerialize["soa"] = o.Soa
	return toSerialize, nil
}

func (o *ResultModelZoneSOA) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"domain",
		"soa",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResultModelZoneSOA := _ResultModelZoneSOA{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResultModelZoneSOA)

	if err != nil {
		return err
	}

	*o = ResultModelZoneSOA(varResultModelZoneSOA)

	return err
}

type NullableResultModelZoneSOA struct {
	value *ResultModelZoneSOA
	isSet bool
}

func (v NullableResultModelZoneSOA) Get() *ResultModelZoneSOA {
	return v.value
}

func (v *NullableResultModelZoneSOA) Set(val *ResultModelZoneSOA) {
	v.value = val
	v.isSet = true
}

func (v NullableResultModelZoneSOA) IsSet() bool {
	return v.isSet
}

func (v *NullableResultModelZoneSOA) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResultModelZoneSOA(val *ResultModelZoneSOA) *NullableResultModelZoneSOA {
	return &NullableResultModelZoneSOA{value: val, isSet: true}
}

func (v NullableResultModelZoneSOA) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResultModelZoneSOA) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


