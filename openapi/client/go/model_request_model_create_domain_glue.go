/*
EasyAPI REST Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
Contact: easyapi@easydns.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RequestModelCreateDomainGlue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestModelCreateDomainGlue{}

// RequestModelCreateDomainGlue struct for RequestModelCreateDomainGlue
type RequestModelCreateDomainGlue struct {
	// The hostname of the glue record being defined in FQDN format
	NameserverName string `json:"nameserver_name"`
	// The IPv4 address to define for this glue record if one is provided
	Ipaddress *string `json:"ipaddress,omitempty"`
	// The IPv6 address to define for this glue record if one is provided
	Ipv6 *string `json:"ipv6,omitempty"`
}

type _RequestModelCreateDomainGlue RequestModelCreateDomainGlue

// NewRequestModelCreateDomainGlue instantiates a new RequestModelCreateDomainGlue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestModelCreateDomainGlue(nameserverName string) *RequestModelCreateDomainGlue {
	this := RequestModelCreateDomainGlue{}
	this.NameserverName = nameserverName
	return &this
}

// NewRequestModelCreateDomainGlueWithDefaults instantiates a new RequestModelCreateDomainGlue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestModelCreateDomainGlueWithDefaults() *RequestModelCreateDomainGlue {
	this := RequestModelCreateDomainGlue{}
	return &this
}

// GetNameserverName returns the NameserverName field value
func (o *RequestModelCreateDomainGlue) GetNameserverName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NameserverName
}

// GetNameserverNameOk returns a tuple with the NameserverName field value
// and a boolean to check if the value has been set.
func (o *RequestModelCreateDomainGlue) GetNameserverNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NameserverName, true
}

// SetNameserverName sets field value
func (o *RequestModelCreateDomainGlue) SetNameserverName(v string) {
	o.NameserverName = v
}

// GetIpaddress returns the Ipaddress field value if set, zero value otherwise.
func (o *RequestModelCreateDomainGlue) GetIpaddress() string {
	if o == nil || IsNil(o.Ipaddress) {
		var ret string
		return ret
	}
	return *o.Ipaddress
}

// GetIpaddressOk returns a tuple with the Ipaddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestModelCreateDomainGlue) GetIpaddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ipaddress) {
		return nil, false
	}
	return o.Ipaddress, true
}

// HasIpaddress returns a boolean if a field has been set.
func (o *RequestModelCreateDomainGlue) HasIpaddress() bool {
	if o != nil && !IsNil(o.Ipaddress) {
		return true
	}

	return false
}

// SetIpaddress gets a reference to the given string and assigns it to the Ipaddress field.
func (o *RequestModelCreateDomainGlue) SetIpaddress(v string) {
	o.Ipaddress = &v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *RequestModelCreateDomainGlue) GetIpv6() string {
	if o == nil || IsNil(o.Ipv6) {
		var ret string
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestModelCreateDomainGlue) GetIpv6Ok() (*string, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *RequestModelCreateDomainGlue) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given string and assigns it to the Ipv6 field.
func (o *RequestModelCreateDomainGlue) SetIpv6(v string) {
	o.Ipv6 = &v
}

func (o RequestModelCreateDomainGlue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestModelCreateDomainGlue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nameserver_name"] = o.NameserverName
	if !IsNil(o.Ipaddress) {
		toSerialize["ipaddress"] = o.Ipaddress
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	return toSerialize, nil
}

func (o *RequestModelCreateDomainGlue) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nameserver_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequestModelCreateDomainGlue := _RequestModelCreateDomainGlue{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRequestModelCreateDomainGlue)

	if err != nil {
		return err
	}

	*o = RequestModelCreateDomainGlue(varRequestModelCreateDomainGlue)

	return err
}

type NullableRequestModelCreateDomainGlue struct {
	value *RequestModelCreateDomainGlue
	isSet bool
}

func (v NullableRequestModelCreateDomainGlue) Get() *RequestModelCreateDomainGlue {
	return v.value
}

func (v *NullableRequestModelCreateDomainGlue) Set(val *RequestModelCreateDomainGlue) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestModelCreateDomainGlue) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestModelCreateDomainGlue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestModelCreateDomainGlue(val *RequestModelCreateDomainGlue) *NullableRequestModelCreateDomainGlue {
	return &NullableRequestModelCreateDomainGlue{value: val, isSet: true}
}

func (v NullableRequestModelCreateDomainGlue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestModelCreateDomainGlue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


