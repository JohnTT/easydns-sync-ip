/*
EasyAPI REST Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
Contact: easyapi@easydns.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RequestModelDomainNameservers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestModelDomainNameservers{}

// RequestModelDomainNameservers struct for RequestModelDomainNameservers
type RequestModelDomainNameservers struct {
	// The list of nameservers as FQDN
	Nameservers []string `json:"nameservers"`
}

type _RequestModelDomainNameservers RequestModelDomainNameservers

// NewRequestModelDomainNameservers instantiates a new RequestModelDomainNameservers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestModelDomainNameservers(nameservers []string) *RequestModelDomainNameservers {
	this := RequestModelDomainNameservers{}
	this.Nameservers = nameservers
	return &this
}

// NewRequestModelDomainNameserversWithDefaults instantiates a new RequestModelDomainNameservers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestModelDomainNameserversWithDefaults() *RequestModelDomainNameservers {
	this := RequestModelDomainNameservers{}
	return &this
}

// GetNameservers returns the Nameservers field value
func (o *RequestModelDomainNameservers) GetNameservers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Nameservers
}

// GetNameserversOk returns a tuple with the Nameservers field value
// and a boolean to check if the value has been set.
func (o *RequestModelDomainNameservers) GetNameserversOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nameservers, true
}

// SetNameservers sets field value
func (o *RequestModelDomainNameservers) SetNameservers(v []string) {
	o.Nameservers = v
}

func (o RequestModelDomainNameservers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestModelDomainNameservers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nameservers"] = o.Nameservers
	return toSerialize, nil
}

func (o *RequestModelDomainNameservers) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nameservers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequestModelDomainNameservers := _RequestModelDomainNameservers{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRequestModelDomainNameservers)

	if err != nil {
		return err
	}

	*o = RequestModelDomainNameservers(varRequestModelDomainNameservers)

	return err
}

type NullableRequestModelDomainNameservers struct {
	value *RequestModelDomainNameservers
	isSet bool
}

func (v NullableRequestModelDomainNameservers) Get() *RequestModelDomainNameservers {
	return v.value
}

func (v *NullableRequestModelDomainNameservers) Set(val *RequestModelDomainNameservers) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestModelDomainNameservers) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestModelDomainNameservers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestModelDomainNameservers(val *RequestModelDomainNameservers) *NullableRequestModelDomainNameservers {
	return &NullableRequestModelDomainNameservers{value: val, isSet: true}
}

func (v NullableRequestModelDomainNameservers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestModelDomainNameservers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


