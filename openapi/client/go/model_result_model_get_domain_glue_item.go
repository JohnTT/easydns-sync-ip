/*
EasyAPI REST Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
Contact: easyapi@easydns.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResultModelGetDomainGlueItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResultModelGetDomainGlueItem{}

// ResultModelGetDomainGlueItem struct for ResultModelGetDomainGlueItem
type ResultModelGetDomainGlueItem struct {
	// The hostname that the glue record is defined for
	Name string `json:"name"`
	// The domain the glue records are provided by
	Domain string `json:"domain"`
	// The IPv4 address defined for this glue record if one is defined
	Ipaddress *string `json:"ipaddress,omitempty"`
	// The IPv6 address defined for this glue record if one is defined
	Ipv6 *string `json:"ipv6,omitempty"`
}

type _ResultModelGetDomainGlueItem ResultModelGetDomainGlueItem

// NewResultModelGetDomainGlueItem instantiates a new ResultModelGetDomainGlueItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResultModelGetDomainGlueItem(name string, domain string) *ResultModelGetDomainGlueItem {
	this := ResultModelGetDomainGlueItem{}
	this.Name = name
	this.Domain = domain
	return &this
}

// NewResultModelGetDomainGlueItemWithDefaults instantiates a new ResultModelGetDomainGlueItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultModelGetDomainGlueItemWithDefaults() *ResultModelGetDomainGlueItem {
	this := ResultModelGetDomainGlueItem{}
	return &this
}

// GetName returns the Name field value
func (o *ResultModelGetDomainGlueItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResultModelGetDomainGlueItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResultModelGetDomainGlueItem) SetName(v string) {
	o.Name = v
}

// GetDomain returns the Domain field value
func (o *ResultModelGetDomainGlueItem) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *ResultModelGetDomainGlueItem) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *ResultModelGetDomainGlueItem) SetDomain(v string) {
	o.Domain = v
}

// GetIpaddress returns the Ipaddress field value if set, zero value otherwise.
func (o *ResultModelGetDomainGlueItem) GetIpaddress() string {
	if o == nil || IsNil(o.Ipaddress) {
		var ret string
		return ret
	}
	return *o.Ipaddress
}

// GetIpaddressOk returns a tuple with the Ipaddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultModelGetDomainGlueItem) GetIpaddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ipaddress) {
		return nil, false
	}
	return o.Ipaddress, true
}

// HasIpaddress returns a boolean if a field has been set.
func (o *ResultModelGetDomainGlueItem) HasIpaddress() bool {
	if o != nil && !IsNil(o.Ipaddress) {
		return true
	}

	return false
}

// SetIpaddress gets a reference to the given string and assigns it to the Ipaddress field.
func (o *ResultModelGetDomainGlueItem) SetIpaddress(v string) {
	o.Ipaddress = &v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *ResultModelGetDomainGlueItem) GetIpv6() string {
	if o == nil || IsNil(o.Ipv6) {
		var ret string
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResultModelGetDomainGlueItem) GetIpv6Ok() (*string, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *ResultModelGetDomainGlueItem) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given string and assigns it to the Ipv6 field.
func (o *ResultModelGetDomainGlueItem) SetIpv6(v string) {
	o.Ipv6 = &v
}

func (o ResultModelGetDomainGlueItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResultModelGetDomainGlueItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["domain"] = o.Domain
	if !IsNil(o.Ipaddress) {
		toSerialize["ipaddress"] = o.Ipaddress
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	return toSerialize, nil
}

func (o *ResultModelGetDomainGlueItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"domain",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResultModelGetDomainGlueItem := _ResultModelGetDomainGlueItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResultModelGetDomainGlueItem)

	if err != nil {
		return err
	}

	*o = ResultModelGetDomainGlueItem(varResultModelGetDomainGlueItem)

	return err
}

type NullableResultModelGetDomainGlueItem struct {
	value *ResultModelGetDomainGlueItem
	isSet bool
}

func (v NullableResultModelGetDomainGlueItem) Get() *ResultModelGetDomainGlueItem {
	return v.value
}

func (v *NullableResultModelGetDomainGlueItem) Set(val *ResultModelGetDomainGlueItem) {
	v.value = val
	v.isSet = true
}

func (v NullableResultModelGetDomainGlueItem) IsSet() bool {
	return v.isSet
}

func (v *NullableResultModelGetDomainGlueItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResultModelGetDomainGlueItem(val *ResultModelGetDomainGlueItem) *NullableResultModelGetDomainGlueItem {
	return &NullableResultModelGetDomainGlueItem{value: val, isSet: true}
}

func (v NullableResultModelGetDomainGlueItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResultModelGetDomainGlueItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


